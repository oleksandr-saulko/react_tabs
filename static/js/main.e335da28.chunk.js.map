{"version":3,"sources":["Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","useState","tabContent","setTabContent","useEffect","currentTabContent","filter","tab","id","content","className","map","title","classNames","href","onClick","App","setSelectedTabId","at","event","currentTarget","hash","slice","ReactDOM","render","document","getElementById"],"mappings":"8LAsDeA,EAvCe,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cACpD,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KASA,OAPAC,qBAAU,WACR,IAAMC,EAAoBP,EAAKQ,QAAO,SAAAC,GAAG,OAAIA,EAAIC,KAAOT,KAAe,GACpEU,QAEHN,EAAcE,KACb,CAACN,IAGF,sBAAK,UAAQ,gBAAb,UACE,qBAAKW,UAAU,gBAAf,SACE,6BACGZ,EAAKa,KAAI,gBAAGH,EAAH,EAAGA,GAAII,EAAP,EAAOA,MAAP,OACR,oBACEF,UAAWG,IAAW,CAAE,YAAaL,IAAOT,IAC5C,UAAQ,MAFV,SAKE,mBACEe,KAAI,WAAMN,GACV,UAAQ,UACRO,QAASf,EAHX,SAKGY,KAPEJ,UAcb,qBAAKE,UAAU,QAAQ,UAAQ,aAA/B,SACGR,QC1CIJ,G,kBAAO,CAClB,CAAEU,GAAI,QAASI,MAAO,QAASH,QAAS,eACxC,CAAED,GAAI,QAASI,MAAO,QAASH,QAAS,eACxC,CAAED,GAAI,QAASI,MAAO,QAASH,QAAS,iBAG7BO,EAAgB,WAC3B,MAA0Cf,mBAAS,SAAnD,mBAAOF,EAAP,KAAsBkB,EAAtB,KAQA,OACE,sBAAKP,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,gCAEG,IACAX,EAAcmB,IAAI,MAErB,cAAC,EAAD,CACEpB,KAAMA,EACNC,cAAeA,EACfC,cAhBgB,SAACmB,GACrB,IAAMX,EAAKW,EAAMC,cAAcC,KAAKC,MAAM,GAE1CL,EAAiBT,UCfrBe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e335da28.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\n\ntype Tab = {\n  id: string;\n  title: string;\n  content: string;\n};\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (event: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst Tabs: React.FC<Props> = ({ tabs, selectedTabId, onTabSelected }) => {\n  const [tabContent, setTabContent] = useState('');\n\n  useEffect(() => {\n    const currentTabContent = tabs.filter(tab => tab.id === selectedTabId)[0]\n      .content;\n\n    setTabContent(currentTabContent);\n  }, [selectedTabId]);\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(({ id, title }) => (\n            <li\n              className={classNames({ 'is-active': id === selectedTabId })}\n              data-cy=\"Tab\"\n              key={id}\n            >\n              <a\n                href={`#${id}`}\n                data-cy=\"TabLink\"\n                onClick={onTabSelected}\n              >\n                {title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabContent}\n      </div>\n    </div>\n  );\n};\n\nexport default Tabs;\n","import React, { useState } from 'react';\nimport Tabs from './Tabs';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n\n  const onTabSelected = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    const id = event.currentTarget.hash.slice(1);\n\n    setSelectedTabId(id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is Tab\n        {' '}\n        {selectedTabId.at(-1)}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}